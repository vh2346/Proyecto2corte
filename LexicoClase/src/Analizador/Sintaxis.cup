package Analizador;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Linea, Comillas, T_dato,Marca_printf, Cadena, If, Else, Do, While, For, Int, Double, Bool,
    Float, Char, Const, Short, Unsigned, Break, Case, Long, Struct,
    Continue, Default, Enum, Extern, GoTo, Register, Return, Union, Switch,
    Typedef, Igual, Suma, Resta, Multiplicacion, Division, Op_logico, Op_relacional,
    Op_atribucion, Op_incremento, Op_booleano, Parent_a, Parent_c,
    Llave_a, Llave_c, Corchete_a, Corchete_c, Main, P_coma, Punto, Coma, Identificador, Comilla_simple,Apuntador,
    Printf, Scanf, Cin, Cout, Numero, ERROR, Numeral, Define, Include, Menor, Mayor, Dos_puntos ,Op_cout, Op_cin, Using, Namespace, System_r;
non terminal INICIO, SENTENCIA, DECLARACION, DECLARACION_FOR, INCLUDE, DEFINE, IF, IF_ELSE, CASE,
    DEFAULT, DO, ENUM, GOTO, UNION, STRUCT, SWITCH, PRINTF, SCANF, CIN, COUT , COUT_LIST , CIN_LIST, CIN_PARAM,
    WHILE, FOR, SENTENCIA_BOOLEANA, SENTENCIA_FOR, TYPEDEF, SENTENCIA_LIST_CASE, SENTENCIA_CASE, CONST, DECLARACION_LIST,
    CABECERA, COUT_PARAM , PRINTF_LIST, PRINTF_PARAM , USING_NAMESPACE, SYSTEM;

start with INICIO;

INICIO ::= 
    CABECERA Int Main Parent_a Parent_c Llave_a SENTENCIA Return Numero P_coma Llave_c |
    CABECERA Main Parent_a Parent_c Llave_a SENTENCIA Return Numero P_coma Llave_c |
    CABECERA Int Main Parent_a Parent_c Llave_a SENTENCIA Return Identificador P_coma Llave_c |
    CABECERA Main Parent_a Parent_c Llave_a SENTENCIA Return Identificador P_coma Llave_c 
    
;
CABECERA ::= 
    CABECERA INCLUDE |
    INCLUDE |
    CABECERA DEFINE |
    DEFINE |
    CABECERA STRUCT |
    STRUCT |
    CABECERA USING_NAMESPACE |
    USING_NAMESPACE
;

USING_NAMESPACE ::= Using Namespace Identificador P_coma
;

INCLUDE ::=
    Numeral Include Menor Identificador Punto Identificador Mayor |
    Numeral Include Menor Identificador Mayor |
    Numeral Include Comillas Identificador Punto Identificador Comillas | 
    Numeral Include Comillas Identificador Comillas 
;

SENTENCIA ::= 
    SENTENCIA DECLARACION |
    DECLARACION |
    SENTENCIA IF | 
    IF |
    SENTENCIA IF_ELSE |
    IF_ELSE |
    SENTENCIA WHILE |
    WHILE |
    SENTENCIA FOR |
    FOR |
    SENTENCIA DO |
    DO |
    SENTENCIA TYPEDEF |
    TYPEDEF |
    SENTENCIA SWITCH |
    SWITCH |
    SENTENCIA Continue P_coma |
    Continue P_coma |
    SENTENCIA COUT |
    COUT |
    SENTENCIA CIN |
    CIN |
    SENTENCIA PRINTF |
    PRINTF |
    SENTENCIA SCANF |
    SCANF |
    SENTENCIA SYSTEM |
    SYSTEM
;
DECLARACION_LIST ::=
    DECLARACION_LIST DECLARACION |
    DECLARACION
;
DECLARACION ::= 
    Int Identificador P_coma |
    Char Identificador P_coma |
    Double Identificador P_coma |
    Float Identificador P_coma |
    Long Identificador P_coma |
    Cadena Identificador P_coma |
    Bool Identificador P_coma |
    Unsigned Identificador P_coma |
    Short Identificador P_coma |
    T_dato Identificador P_coma | 
    T_dato Identificador Op_atribucion Numero P_coma |
    Identificador Op_incremento P_coma |
    Int Identificador Igual Numero P_coma |
    Char Identificador Igual Comilla_simple Identificador Comilla_simple P_coma |
    Double Identificador Igual Numero P_coma |
    Double Identificador Igual Numero Punto Numero P_coma |
    Float Identificador Igual Numero P_coma |
    Float Identificador Igual Numero Punto Numero P_coma |
    Long Identificador Igual Numero P_coma |
    Long Identificador Igual Numero Punto Numero P_coma |
    Bool Identificador Igual Op_booleano P_coma |
    Unsigned Identificador Igual Numero P_coma |
    Unsigned Identificador Igual Numero Punto Numero P_coma |
    Short Identificador Igual Numero P_coma |
    Short Identificador Igual Numero Punto Numero P_coma |
    T_dato Identificador Op_atribucion Numero Punto Numero P_coma |
    T_dato Identificador Igual Numero P_coma |
    T_dato Identificador Igual Numero Punto Numero P_coma |
    T_dato Identificador Op_incremento P_coma | 
    T_dato Op_incremento Identificador P_coma | 
    Cadena Identificador Op_atribucion Comillas Comillas P_coma |
    Cadena Identificador Igual Comillas Comillas P_coma |
    Cadena Identificador Op_atribucion Comillas Identificador Comillas P_coma |
    Cadena Identificador Igual Comillas Identificador Comillas P_coma |
    Struct Identificador Identificador P_coma |
    Identificador Igual Numero P_coma |
    Identificador Igual Comillas Comillas P_coma|
    Identificador Igual Comillas Identificador Comillas P_coma|
    Identificador Igual Comilla_simple Identificador Comilla_simple P_coma|
    Identificador Identificador P_coma |
    Identificador Punto Identificador Igual Numero P_coma |
    Identificador Punto Identificador Igual Numero Punto Numero P_coma |
    Identificador Punto Identificador Igual Comilla_simple Identificador Comilla_simple P_coma |
    Identificador Punto Identificador Igual Comillas Identificador Comillas P_coma
;

IF_ELSE ::= IF Else Llave_a SENTENCIA Llave_c
;
IF ::= If Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c
;

SENTENCIA_BOOLEANA ::= 
    Identificador |
    Op_booleano | 
    Identificador Op_relacional Op_booleano |
    Identificador Mayor Numero |
    Identificador Menor Numero |
    Identificador Mayor Identificador |
    Identificador Menor Identificador |
    Identificador Op_relacional Numero |
    Identificador Op_relacional Identificador |
    Identificador Op_relacional Comillas Comillas |
    Identificador Op_relacional Comillas Identificador Comillas 
;

WHILE ::= While Parent_a SENTENCIA_BOOLEANA Parent_c Llave_a SENTENCIA Llave_c
;
DO ::= Do Llave_a SENTENCIA Llave_c While Parent_a SENTENCIA_BOOLEANA Parent_c P_coma
;
FOR ::= For Parent_a SENTENCIA_FOR Parent_c Llave_a SENTENCIA Llave_c
;
TYPEDEF ::= Typedef Int Identificador P_coma |
            Typedef Double Identificador P_coma  |
            Typedef Long Identificador  P_coma |
            Typedef Unsigned Identificador  P_coma |
            Typedef Short Identificador P_coma |
            Typedef Float Identificador  P_coma  |
            Typedef Char Identificador P_coma |
            Typedef Cadena Identificador  P_coma  |
            Typedef Bool Identificador  P_coma  |
            Typedef T_dato Identificador  P_coma  
;
CONST ::=   Const Int Identificador Igual Numero P_coma |
            Const Double Identificador Igual Numero P_coma  |
            Const Double Identificador Igual Numero Punto Numero P_coma  |
            Const Long Identificador Igual Numero P_coma |
            Const Long Identificador Igual Numero Punto Numero P_coma |
            Const Unsigned Identificador Igual Numero P_coma |
            Const Unsigned Identificador Igual Numero Punto Numero P_coma |
            Const Short Identificador Igual Numero P_coma |
            Const Short Identificador Igual Numero Punto Numero P_coma |
            Const Float Identificador Igual Numero  P_coma  |
            Const Float Identificador Igual Numero Punto Numero  P_coma  |
            Const Char Identificador Igual Comilla_simple Identificador Comilla_simple P_coma |
            Const Cadena Identificador Igual Comillas Identificador Comillas  P_coma  |
            Const Bool Identificador Igual Op_booleano  P_coma  |
            Const T_dato Igual Numero Identificador P_coma  
;
SWITCH ::= Switch Parent_a Identificador Parent_c Llave_a SENTENCIA_LIST_CASE Default Dos_puntos SENTENCIA Break P_coma Llave_c
;
SENTENCIA_LIST_CASE ::=  
    SENTENCIA_LIST_CASE SENTENCIA_CASE |
    SENTENCIA_CASE
;
SENTENCIA_CASE ::= Case Numero Dos_puntos SENTENCIA Break P_coma
;

STRUCT ::= Struct Identificador Llave_a DECLARACION_LIST Llave_c P_coma   
;

DEFINE ::=   
            Numeral Define Identificador Numero |
            Numeral Define Identificador Numero Punto Numero |
            Numeral Define Identificador Comillas Identificador Comillas |
            Numeral Define Identificador Comilla_simple Identificador Comilla_simple
;
COUT ::= Cout COUT_LIST P_coma
;
COUT_LIST ::= COUT_LIST COUT_PARAM | COUT_PARAM
;
COUT_PARAM ::= Identificador Op_cout | Comillas Identificador Comillas Op_cout | 
               Identificador | Comillas Identificador Comillas
;
CIN ::= Cin CIN_LIST P_coma
;
CIN_LIST ::= CIN_LIST CIN_PARAM | CIN_PARAM
;
CIN_PARAM ::= Identificador Op_cin | Identificador 
;
PRINTF ::= Printf PRINTF_LIST Parent_c P_coma
;
PRINTF_LIST ::= PRINTF_LIST PRINTF_PARAM | PRINTF_PARAM
;
PRINTF_PARAM ::= Identificador Coma | Comillas Identificador Marca_printf Comillas Coma | 
                 Identificador | Comillas Identificador Marca_printf Comillas |
                 Identificador Punto Identificador 
;
SCANF ::= Scanf Comillas Marca_printf Comillas Coma Apuntador Parent_c P_coma
;
SYSTEM ::= System_r Parent_a Comillas Identificador Comillas Parent_c P_coma
;
SENTENCIA_FOR ::=
    Int Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Double Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Long Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Unsigned Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Short Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Float Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    T_dato Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR |
    Identificador Igual Numero P_coma SENTENCIA_BOOLEANA P_coma DECLARACION_FOR 
;
DECLARACION_FOR ::= 
    Identificador Op_atribucion Numero |
    Identificador Op_incremento | 
    Op_incremento Identificador
;
